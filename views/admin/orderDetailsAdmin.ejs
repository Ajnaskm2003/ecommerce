<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --success-color: #2ecc71;
            --danger-color: #e74c3c;
            --warning-color: #f1c40f;
            --info-color: #3498db;
            --light-bg: #f8f9fa;
            --border-color: #e9ecef;
        }

        body {
            background-color: var(--light-bg);
            color: #2d3436;
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        }

        .order-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 2rem;
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.05);
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-bottom: 1.5rem;
            border-bottom: 2px solid var(--border-color);
            margin-bottom: 2rem;
        }

        .order-id {
            font-size: 1.5rem;
            color: var(--primary-color);
            font-weight: 600;
        }

        .section-title {
            font-size: 1.2rem;
            color: #2d3436;
            font-weight: 600;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .info-card {
            background: var(--light-bg);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .info-item {
            margin-bottom: 0.5rem;
        }

        .info-label {
            color: #6c757d;
            font-size: 0.9rem;
            margin-bottom: 0.25rem;
        }

        .info-value {
            font-weight: 500;
            color: #2d3436;
        }

        .order-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin: 1.5rem 0;
        }

        .order-table th {
            background: var(--light-bg);
            padding: 1rem;
            font-weight: 600;
            color: #2d3436;
            text-align: left;
            border-bottom: 2px solid var(--border-color);
        }

        .order-table td {
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }

        .status-select {
            width: 100%;
            max-width: 300px;
            padding: 0.75rem;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .status-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.1);
            outline: none;
        }

        .update-btn {
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .update-btn:hover {
            background: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.15);
        }

        .total-section {
            background: var(--light-bg);
            border-radius: 12px;
            padding: 1.5rem;
            margin-top: 2rem;
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
        }

        .total-label {
            color: #6c757d;
        }

        .total-value {
            font-weight: 600;
        }

        .grand-total {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 2px solid var(--border-color);
            font-size: 1.2rem;
        }

        .alert {
            border-radius: 8px;
            padding: 1rem;
            margin-top: 1rem;
        }
    </style>
</head>
<body>
    <div class="order-container">
        <div class="order-header">
            <div class="order-id">
                <i class="fas fa-shopping-bag"></i>
                Order #<%= order.orderId %>
            </div>
            <div class="order-date">
                <i class="far fa-calendar-alt"></i>
                <%= new Date(order.createdAt).toLocaleDateString() %>
            </div>
        </div>

        <div class="info-grid">
            <div class="info-card">
                <div class="section-title">
                    <i class="fas fa-user"></i> Customer Details
                </div>
                <div class="info-item">
                    <div class="info-label">Name</div>
                    <div class="info-value"><%= order.userId.name %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Email</div>
                    <div class="info-value"><%= order.userId.email %></div>
                </div>
            </div>

            <div class="info-card">
                <div class="section-title">
                    <i class="fas fa-shipping-fast"></i> Shipping Address
                </div>
                <div class="info-item">
                    <div class="info-value"><%= order.address.fullname %></div>
                    <div class="info-value"><%= order.address.street %></div>
                    <div class="info-value"><%= order.address.city %>, <%= order.address.state %></div>
                    <div class="info-value"><%= order.address.zipCode %></div>
                    <div class="info-value"><i class="fas fa-phone"></i> <%= order.address.phone %></div>
                </div>
            </div>
        </div>

        <div class="section-title">
            <i class="fas fa-box"></i> Order Items
        </div>
        <table class="order-table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Size</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <% order.orderItems.forEach(item => { %>
                    <tr>
                        <td><%= item.product.productName %></td>
                        <td><%= item.size || 'N/A' %></td>
                        <td><%= item.quantity %></td>
                        <td>₹<%= item.price.toFixed(2) %></td>
                        <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>

        <div class="total-section">
            <div class="total-row">
                <span class="total-label">Subtotal:</span>
                <span class="total-value">₹<%= order.totalPrice.toFixed(2) %></span>
            </div>
            <div class="total-row">
                <span class="total-label">Discount:</span>
                <span class="total-value">- ₹<%= order.discount.toFixed(2) %></span>
            </div>
            <div class="total-row grand-total">
                <span class="total-label">Total Amount:</span>
                <span class="total-value">₹<%= order.totalAmount.toFixed(2) %></span>
            </div>
        </div>

        <div class="info-card">
            <div class="section-title">
                <i class="fas fa-tasks"></i> Order Status
            </div>
            <form id="statusForm" class="d-flex gap-3 align-items-end">
                <div class="flex-grow-1">
                    <select name="status" id="status" class="status-select">
                        <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                        <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                        <option value="Return Request" <%= order.status === 'Return Request' ? 'selected' : '' %>>Return Request</option>
                        <option value="Returned" <%= order.status === 'Returned' ? 'selected' : '' %>>Returned</option>
                    </select>
                </div>
                <button type="submit" class="update-btn">
                    <i class="fas fa-sync-alt"></i> Update Status
                </button>
            </form>
            <div id="statusMessage"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.getElementById('statusForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const status = document.getElementById('status').value;
            
            try {
                const response = await fetch(`/admin/orders/<%= order.orderId %>/update-status`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Status Updated!',
                        text: result.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    throw new Error(result.error || 'Failed to update status');
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: error.message
                });
            }
        });
    </script>
</body>
</html>